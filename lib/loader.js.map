{"version":3,"sources":["../src/loader.js"],"names":[],"mappings":";;;;;;AACA,MAAM,UAAU,EAAhB;;AAEA;;;;;;;;;;AAUA,SAAS,SAAT,CAAmB,IAAnB,EAAyB,OAAzB,EAAkC;;AAEhC,MAAI,SAAS,IAAT,IAAiB,OAAO,IAAP,KAAiB,WAAtC,EACE,MAAM,IAAI,KAAJ,CAAU,yBAAV,CAAN;;AAEF,MAAI,OAAO,IAAP,KAAiB,QAAjB,IAA6B,SAAS,EAA1C,EACE,MAAM,IAAI,KAAJ,CAAU,0BAAV,CAAN;;AAEF,MAAI,QAAQ,IAAR,CAAJ,EACE,MAAM,IAAI,KAAJ,CAAW,GAAE,IAAK,4BAAlB,CAAN;;AAEF,MAAI,OAAO,OAAP,KAAoB,UAAxB,EACE,MAAM,IAAI,KAAJ,CAAW,GAAE,IAAK,kDAAlB,CAAN;;AAEF,UAAQ,IAAR,IAAgB,OAAhB;AACD;;AAED;;;;;;;AAOA,SAAS,SAAT,CAAmB,IAAnB,EAAyB;;AAEvB,QAAM,SAAS,QAAQ,IAAR,CAAf;;AAEA,MAAI,OAAO,MAAP,KAAmB,UAAvB,EACE,MAAM,IAAI,KAAJ,CAAW,GAAE,IAAK,wBAAlB,CAAN;;AAEF,SAAO,MAAP;AACD;;AAED;;;AAGA,SAAS,KAAT,GAAiB;AACf,SAAO,IAAP,CAAY,OAAZ,EAAqB,OAArB,CAA6B,UAAS,GAAT,EAAc;AAAE,WAAO,QAAQ,GAAR,CAAP;AAAsB,GAAnE;AACD;;QAGc,M,GAAb,S;QACa,O,GAAb,S;QACA,K,GAAA,K","file":"loader.js","sourcesContent":["\nconst modules = {};\n\n/**\n * Add a module factory to the cache.\n *\n * @param name    Module name.\n * @param factory Function to create an instance of the module.\n *\n * @throws Will throw error if name is not a valid module name.\n * @throws Will throw error if module already exists.\n * @throws Will throw error if module factory is not typeof Function.\n */\nfunction addModule(name, factory) {\n\n  if (name === null || typeof(name) === 'undefined')\n    throw new Error('module name is required');\n\n  if (typeof(name) !== 'string' || name === '')\n    throw new Error('module name is not valid');\n\n  if (modules[name])\n    throw new Error(`${name} module is already defined`);\n\n  if (typeof(factory) !== 'function')\n    throw new Error(`${name} module factory argument must be typeof function`);\n\n  modules[name] = factory;\n}\n\n/**\n * Get an instance of the module by name.\n *\n * @param name Module name.\n *\n * @throws Will throw error if module does not exists.\n */\nfunction getModule(name) {\n\n  const target = modules[name];\n\n  if (typeof(target) !== 'function')\n    throw new Error(`${name} module is not defined`);\n\n  return target;\n}\n\n/**\n * Remove all modules\n */\nfunction purge() {\n  Object.keys(modules).forEach(function(key) { delete modules[key]; });\n}\n\nexport {\n  addModule as define,\n  getModule as require,\n  purge\n}\n"]}