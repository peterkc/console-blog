{"version":3,"sources":["../src/blog.js"],"names":[],"mappings":"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","file":"blog.js","sourcesContent":["import 'fs';\nimport 'path';\n\nimport debug from 'debug';\nimport fetch from 'node-fetch';\nimport sleep from 'es7-sleep';\nimport minimist from 'minimist';\nimport URL from 'normalize-url';\n\nconst HTTP = {\n  GET: 'GET',\n  POST: 'POST'\n};\n\nconst trace = debug('blog');\nconst argv = minimist(process.argv.slice(2));\n\n/**\n *\n * @param endpoint Resource endpoint. (required)\n * @param method   HTTP method.       (optional)\n * @param data     HTTP payload.      (optional)\n * @returns {*}\n */\nasync function api(endpoint, method, data) {\n  const server = 'https://jsonplaceholder.typicode.com/';\n  const url    = URL(`${server}${endpoint}`);\n  const opt    = { method: HTTP.GET };\n\n  if (typeof(method) === 'string')\n    opt.method = method;\n\n  if (typeof(data) === 'object') {\n    opt.body = JSON.stringify(data);\n    opt.headers = { 'content-type': 'application/json' }\n  }\n\n  trace(`${url} ${opt.method}`);\n\n  const res    = await fetch(url, opt).catch(err => console.error(err));\n  return await res.json();\n}\n\n\n/**\n * Get user by ID and print out name and email.\n *\n * @param userId The user ID.\n * @returns {user}\n */\nasync function getUser(userId) {\n  const user  = await api(`users/${userId}`);\n\n  const msg = `\n${user.name} (${user.email})`;\n\n  console.log(msg);\n  return user;\n}\n\n\n/**\n * Show a summary of posts, albums, and todos.\n *\n * @param user The {user} object.\n * @returns {posts, albums, todos}\n */\nasync function showSummary(user) {\n  const posts  = await api(`posts?userId=${user.id}`);\n  const albums = await api(`albums?userId=${user.id}`);\n  const todos  = await api(`todos?userId=${user.id}`);\n\n  const msg = [`  \n@${user.username} has ${posts.length} posts, ${albums.length} albums, and ${todos.length} todos\n\nPosts:`];\n\n  posts.forEach( (item) => msg.push(`Post ${item.id}: ${item.title}`) );\n\n  console.log(msg.join('\\n'));\n\n  return { posts: posts, albums: albums, todos: todos };\n}\n\n\n/**\n * Show a post.\n *\n * @param user The {user} object.\n * @param post The {post} object.\n * @returns {comment}\n */\nasync function showPost(user, post) {\n  const comment = await api(`comments?userId=${user.id}&postId=${post.id}`);\n\n  const msg = [`  \nViewing post \"${post.title}\" which has ${comment.length} comments.  \n\nComments:`];\n\n  comment.forEach( (item) => {\n    msg.push(`${item.id} [${item.email}]: ${item.name} `);\n    msg.push(`${item.body.replace(/\\n/g, '')}`);\n    msg.push('');\n  });\n\n  console.log(msg.join('\\n'));\n\n  return comment;\n}\n\n\n/**\n * Add a comment to a post.\n *\n * @param user    The {user} object.\n * @param post    The {post} object.\n * @param comment The comment to post.\n * @returns {comment}\n */\nasync function addComment(user, post, comment) {\n  const data = {\n    name: post.title,\n    email: user.email,\n    body: comment\n  };\n  const result = await api(`posts/${post.id}/comments?userId=${user.id}`, HTTP.POST, data);\n  // const json = await result.json();\n\n  const msg = `\nYou commented:\n${result.body}\n`;\n\n  console.log(msg);\n\n  return result;\n}\n\n\n/**\n * Start simulation\n */\n/* istanbul ignore next  */\n(async function () {\n  // Get user by ID\n  const user = await getUser(argv.user ? argv.user : 1);\n\n  // Show user summary and posts\n  const data = await showSummary(user);\n\n  // Wait 5 secs\n  await sleep(5000);\n\n  // Show comment\n  const post = data.posts[4];\n  await showPost(user, post);\n\n  await sleep(1000);\n  await addComment(user, post, 'Great post!');\n})();\n"]}